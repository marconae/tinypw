name: CI Action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # Sonar: for PR decoration
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Sonar needs full history for PR decoration

      # Install Rust
      - name: Install Rust
        run: rustup update stable

      # Setup coverage report
      - name: Install & setup cargo-llvm-cov
        run: |
          cargo install cargo-llvm-cov
          rustup component add clippy
          cargo install cargo-sonar
          cargo clippy --message-format json > my-clippy-report.json
          cargo sonar --clippy-path my-clippy-report.json        

      # Cache build artifacts for speed
      - uses: Swatinem/rust-cache@v2

      # Build & test tinypw
      - name: Build
        run: cargo build --all-targets --verbose
      - name: Test
        run: cargo test --all --verbose

      # Generate coverage
      - name: Generate coverage (lcov)
        run: |
          cargo llvm-cov --lcov --output-path lcov.info

      # SonarCloud scan (recommended action)
      - name: Sonar scan
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectBaseDir=.