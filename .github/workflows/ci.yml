name: CI Action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # Sonar: for PR decoration
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Sonar needs full history for PR decoration

      # Install Rust toolchain
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      # Install third party crates
      - name: Setup 3rd party
        run: |
          cargo install cargo-llvm-cov

      # Cache Rust artifacts
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-directories: ~/.cargo/bin

      # Sanity checks
      - run: |
          rustc --version
          cargo --version
          cargo clippy --version

      # Clippy
      - name: Run Clippy and collect report
        run: cargo clippy --all-targets --all-features --message-format=json > clippy.json || true

      # Coverage
      - name: Generate coverage (LCOV)
        env:
          LLVM_COV_FLAGS: --path-equivalence=${{ github.workspace }},/github/workspace
        run: |
          mkdir -p coverage
          cargo llvm-cov --workspace --all-features --lcov --output-path coverage/lcov.info

      # Rewrite absolute source paths to the container mount point
      - name: Rewrite LCOV paths for Sonar container
        run: |
          echo "Host workspace: $GITHUB_WORKSPACE"
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" coverage/lcov.info
          # quick sanity: print first SF lines
          sed -n 's/^SF:\(.*\)/\1/p' coverage/lcov.info | head -5      

      - name: Send to SonarCloud via cargo-sonar
        if: always() # Sonar should run every time for PR checks
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          cargo sonar \
            --organization marconae \
            --project marconae_tinypw \
            --lcov-path coverage/lcov.info \
            --clippy \
            --clippy-path clippy.json

      # Scan
#      - name: Sonar scan
#        if: always() # Sonar should run every time for PR checks
#        uses: sonarsource/sonarqube-scan-action@v2
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: >
#            -Dsonar.host.url=https://sonarcloud.io
#            -Dsonar.projectKey=marconae_tinypw
#            -Dsonar.organization=marconae
#            -Dsonar.projectBaseDir=.
#            -Dsonar.rust.lcov.reportPaths=coverage/lcov.info
#            -Dsonar.rust.clippy.disabled=true
#            -Dsonar.log.level=DEBUG